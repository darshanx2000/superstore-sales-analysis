
Letâ€™s start by calculating some high-level insights:

ðŸ”¹ Total Sales
ðŸ”¹ Total Profit
ðŸ”¹ Average Discount
ðŸ”¹ Average Profit Margin

# Basic KPIs
total_sales = df['Sales'].sum()
total_profit = df['Profit'].sum()
avg_discount = df['Discount'].mean()
avg_profit_margin = df['Profit Margin (%)'].mean()

print(f" Total Sales: ${total_sales:,.2f}")
print(f"Total Profit: ${total_profit:,.2f}")
print(f"Average Discount: {avg_discount:.2%}")
print(f"Average Profit Margin: {avg_profit_margin:.2f}%")



PLOTTING - Sales & Profit by Category:

import matplotlib.pyplot as plt
import seaborn as sns

# Set style
sns.set(style="whitegrid")

# Group by Category
category_summary = df.groupby('Category')[['Sales', 'Profit']].sum().sort_values(by='Sales', ascending=False)

# Plot
plt.figure(figsize=(10, 6))
category_summary.plot(kind='bar', figsize=(10, 6), color=['skyblue', 'lightgreen'])
plt.title('Total Sales and Profit by Category')
plt.ylabel('Amount ($)')
plt.xticks(rotation=0)
plt.grid(axis='y')
plt.tight_layout()
plt.show()



Sales & Profit by Sub-Category

# Group by Sub-Category
subcat_summary = df.groupby('Sub-Category')[['Sales', 'Profit']].sum().sort_values(by='Sales', ascending=False)

# Plot
plt.figure(figsize=(14, 6))
subcat_summary.plot(kind='bar', figsize=(14, 6), color=['orange', 'seagreen'])
plt.title('Total Sales and Profit by Sub-Category')
plt.ylabel('Amount ($)')
plt.xticks(rotation=45)
plt.grid(axis='y')
plt.tight_layout()
plt.show()

 Top & Bottom States by Profit


# Top 10 states by profit
top_states = df.groupby('State')['Profit'].sum().sort_values(ascending=False).head(10)

# Bottom 10 states by profit (most losses)
bottom_states = df.groupby('State')['Profit'].sum().sort_values(ascending=True).head(10)

# Plotting
plt.figure(figsize=(14, 5))

# Top profitable states
plt.subplot(1, 2, 1)
sns.barplot(x=top_states.values, y=top_states.index, palette='Greens_r')
plt.title('Top 10 Most Profitable States')
plt.xlabel('Total Profit ($)')

# Bottom loss-making states
plt.subplot(1, 2, 2)
sns.barplot(x=bottom_states.values, y=bottom_states.index, palette='Reds')
plt.title('Bottom 10 States by Profit (Losses)')
plt.xlabel('Total Profit ($)')

plt.tight_layout()
plt.show()


Monthly Sales Trend
# Group by month name and sum sales
monthly_sales = df.groupby('Order Month Name')['Sales'].sum()

# To ensure months are in calendar order
month_order = ['January', 'February', 'March', 'April', 'May', 'June',
               'July', 'August', 'September', 'October', 'November', 'December']
monthly_sales = monthly_sales.reindex(month_order)

# Plot
plt.figure(figsize=(12, 6))
sns.lineplot(x=monthly_sales.index, y=monthly_sales.values, marker='o', color='royalblue')
plt.title('Monthly Sales Trend (All Years Combined)')
plt.xlabel('Month')
plt.ylabel('Sales ($)')
plt.grid(True)
plt.tight_layout()
plt.show()


Profit vs Discount - CORRELATION 

plt.figure(figsize=(10, 6))
sns.scatterplot(data=df, x='Discount', y='Profit', hue='Category', alpha=0.6)
sns.regplot(data=df, x='Discount', y='Profit', scatter=False, color='red', line_kws={'linewidth': 2})

plt.title('Profit vs Discount Correlation')
plt.xlabel('Discount')
plt.ylabel('Profit')
plt.grid(True)
plt.tight_layout()
plt.show()

Most transactions with 0% to 20% discount yield positive profit.

Transactions with discounts over 40% often show negative profit.

Some categories might tolerate discounts better (e.g., Technology) than others (e.g., Furniture).



